using Base.Enums;
using Base.Interfaces;
using Base.Models;
using Base.Services;
using EarthAdmApi.Services;
using Microsoft.AspNetCore.Authentication.JwtBearer;
using Microsoft.Data.SqlClient;
using Microsoft.IdentityModel.Tokens;
using System.Data.Common;


// Add services to the container.
var builder = WebApplication.CreateBuilder(args);
var services = builder.Services;
services.AddControllers()
    .AddNewtonsoftJson(opts => { opts.UseMemberCasing(); })
    .AddJsonOptions(opts => { opts.JsonSerializerOptions.PropertyNamingPolicy = null; });

//3.http context
services.AddSingleton<IHttpContextAccessor, HttpContextAccessor>();

//4.user info for base component
services.AddSingleton<IBaseUserService, MyBaseUserService>();

//5.cache server
services.AddMemoryCache();
services.AddSingleton<ICacheService, CacheMemService>();

//5.ado.net for mssql
services.AddTransient<DbConnection, SqlConnection>();
services.AddTransient<DbCommand, SqlCommand>();

//6.appSettings "FunConfig" section -> _Fun.Config
var config = new ConfigDto();
builder.Configuration.GetSection("FunConfig").Bind(config);
_Fun.Config = config;

//jwt驗證
services
    .AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
    .AddJwtBearer(opts => {
        opts.TokenValidationParameters = new TokenValidationParameters
        {
            ValidateLifetime = true,                //是否驗證超時  當設置exp和nbf時有效 
            ValidateIssuerSigningKey = true,        //是否驗證密鑰
            IssuerSigningKey = _Xp.GetJwtKey(),     //SecurityKey
        };
    });

/*
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
services.AddEndpointsApiExplorer();
services.AddSwaggerGen();
*/

//cors
string[] origins = _Fun.Config.AllowOrigins.Split(',');
services.AddCors(opts =>
{
    opts.AddDefaultPolicy(a =>
    {
        a.WithOrigins(origins);
        a.AllowAnyHeader();
        a.AllowAnyMethod();
        a.AllowCredentials();
    });
});

var app = builder.Build();

//1.initial & set locale
var isDev = app.Environment.IsDevelopment();
_Fun.Init(isDev, app.Services, DbTypeEnum.MSSql);
//_Locale.SetCultureAsync(_Fun.Config.Locale);

//3.Authorize
app.UseAuthentication();    //認証
app.UseAuthorization();     //授權
app.UseCors(); //加上後會套用到全域

/*
// Configure the HTTP request pipeline.
if (isDev)
{
    app.UseSwagger();
    app.UseSwaggerUI();
}
*/

app.UseHttpsRedirection();
//app.UseAuthorization();
app.MapControllers();
/*
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}");
*/
app.Run();
